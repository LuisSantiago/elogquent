name: Code Quality

on:
  push:
    branches:
      - main
    paths:
      - '**.php'
      - 'composer.json'
      - 'psalm.xml'
      - 'pint.json'
      - 'phpstan.neon.dist'
  pull_request:
    paths:
      - '**.php'
      - 'composer.json'
      - 'psalm.xml'
      - 'pint.json'
      - 'phpstan.neon.dist'

jobs:
  setup:
    name: Install dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.composer-cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Cache Composer dependencies
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

  pint:
    name: Run Laravel Pint
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run Pint (check mode)
        run: vendor/bin/pint --test

  psalm:
    name: Run Psalm
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run Psalm
        run: vendor/bin/psalm

  phpstan:
    name: Run PHPStan
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse
